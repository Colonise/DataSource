language: node_js

node_js: 10

cache: npm

install:
  - npm install

before_script:
  - npm install -g npm
  - npm install -g gulp

jobs:
  include:
    - stage: Test
      name: Lint
      script:
        # Run Gulp Lint task
        - gulp lint
    - name: Build
      before_script:
        # Install Greenkeeper Lockfile
        - npm install -g greenkeeper-lockfile
        # Update Greenkeeper Lockfile
        - greenkeeper-lockfile-update
      script:
        # Run Gulp Build task
        - gulp build
      after_script:
        # Upload Greenkeeper Lockfile Results
        - greenkeeper-lockfile-upload
    - name: Unit Tests (Node 10)
      # Install Node version 10
      node_js: 10
      script:
        # Run Gulp Test task
        - gulp test
    - name: Unit Tests (Node 11)
      # Install Node version 11
      node_js: 11
      script:
        # Run Gulp Test task
        - gulp test
    - name: Unit Tests (Node 12)
      # Install Node version 12
      node_js: 12
      script:
        # Run Gulp Test task
        - gulp test
    - name: Test Coverage
      before_script:
        # Download Code Climate CLI
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        # Run Gulp Coverage task
        - gulp coverage
      after_script:
        # Report Test Coverage results to Code Climate
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
    - stage: Deploy
      before_install:
        # Decrypt the git_gpg_keys.asc.enc key into git_gpg_keys.asc
        - gpg --output /tmp/git_gpg_keys.asc --decrypt --batch --passphrase ${GPG_DECRYPT_PASSPHRASE} git_gpg_keys.asc.enc
        # Make sure only the current user can read the keys
        - chmod 600 /tmp/git_gpg_keys.asc
        # Import the gpg key
        - gpg --batch --yes --import /tmp/git_gpg_keys.asc
        # Create a script that will pass the passphrase to the gpg CLI called by git
        - echo '/usr/bin/gpg2 --passphrase ${GPG_PASSPHRASE} --batch --no-tty "$@"' > /tmp/gpg-with-passphrase
        # Make the script executable
        - chmod +x /tmp/gpg-with-passphrase
        # Configure git to use the script that passes the passphrase
        - git config gpg.program "/tmp/gpg-with-passphrase"
        # Configure git to sign the commits and tags
        - git config commit.gpgsign true
        # Configure git to use your GPG key
        - git config --global user.signingkey ${GPG_KEY_ID}
      script:
        # Run Gulp Distribute task
        - gulp distribute
      deploy:
        provider: script
        skip_cleanup: true
        # Run Semantic Release
        script: npx semantic-release
